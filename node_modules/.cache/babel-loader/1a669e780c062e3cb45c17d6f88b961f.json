{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";//initial statee\nexport var initialState={votes:0,toggle:true};//reducer function accept state and action, and pass it as an arguments\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"increment\"){return{votes:state.votes+1,toggle:state.toggle};}else if(action.type===\"decrement\"){return{votes:state.votes-1,toggle:state.toggle};}else if(action.type===\"incrementBy10\"){return{votes:state.votes+action.payload,toggle:state.toggle};}else if(action.type===\"toggle\"){return{votes:state.votes,toggle:!state.toggle};}};// creating a store which except a reducer as an arguments(or pass reducer to store)\nvar voteStore=configureStore({reducer:reducer});export default voteStore;","map":{"version":3,"sources":["E:/project/react/react-redux/src/store/votes-store.jsx"],"names":["configureStore","initialState","votes","toggle","reducer","state","action","type","payload","voteStore"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CAAEC,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,IAApB,CAArB,CAEP;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBJ,YAAyB,IAAXK,CAAAA,MAAW,2CAChD,GAAIA,MAAM,CAACC,IAAP,GAAgB,WAApB,CAAiC,CAC/B,MAAO,CAAEL,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAc,CAAvB,CAA0BC,MAAM,CAAEE,KAAK,CAACF,MAAxC,CAAP,CACD,CAFD,IAEO,IAAIG,MAAM,CAACC,IAAP,GAAgB,WAApB,CAAiC,CACtC,MAAO,CAAEL,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAc,CAAvB,CAA0BC,MAAM,CAAEE,KAAK,CAACF,MAAxC,CAAP,CACD,CAFM,IAEA,IAAIG,MAAM,CAACC,IAAP,GAAgB,eAApB,CAAqC,CAC1C,MAAO,CAAEL,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAcI,MAAM,CAACE,OAA9B,CAAuCL,MAAM,CAAEE,KAAK,CAACF,MAArD,CAAP,CACD,CAFM,IAEA,IAAIG,MAAM,CAACC,IAAP,GAAgB,QAApB,CAA8B,CACnC,MAAO,CAAEL,KAAK,CAAEG,KAAK,CAACH,KAAf,CAAsBC,MAAM,CAAE,CAACE,KAAK,CAACF,MAArC,CAAP,CACD,CACF,CAVD,CAYA;AACA,GAAMM,CAAAA,SAAS,CAAGT,cAAc,CAAC,CAAEI,OAAO,CAAPA,OAAF,CAAD,CAAhC,CAEA,cAAeK,CAAAA,SAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n//initial statee\r\nexport const initialState = { votes: 0, toggle: true };\r\n\r\n//reducer function accept state and action, and pass it as an arguments\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return { votes: state.votes + 1, toggle: state.toggle };\r\n  } else if (action.type === \"decrement\") {\r\n    return { votes: state.votes - 1, toggle: state.toggle };\r\n  } else if (action.type === \"incrementBy10\") {\r\n    return { votes: state.votes + action.payload, toggle: state.toggle };\r\n  } else if (action.type === \"toggle\") {\r\n    return { votes: state.votes, toggle: !state.toggle };\r\n  }\r\n};\r\n\r\n// creating a store which except a reducer as an arguments(or pass reducer to store)\r\nconst voteStore = configureStore({ reducer });\r\n\r\nexport default voteStore;\r\n"]},"metadata":{},"sourceType":"module"}